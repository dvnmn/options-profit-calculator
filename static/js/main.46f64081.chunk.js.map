{"version":3,"sources":["components/Calculator.js","App.js","index.js"],"names":["Input","props","useState","ticker","setTicker","price","setPrice","strike","setStrike","type","setType","class","value","onChange","e","target","onClick","createOutput","Output","chartData","setChartData","useEffect","labels","parseInt","datasets","label","data","borderColor","fill","borderJoinStyle","lineTension","Calculator","output","setOutput","className","App","ReactDOM","render","document","getElementById"],"mappings":"4OAKA,SAASA,EAAMC,GAAQ,IAAD,EACUC,mBAAS,IADnB,mBACXC,EADW,KACHC,EADG,OAEQF,mBAAS,IAFjB,mBAEXG,EAFW,KAEJC,EAFI,OAGUJ,mBAAS,IAHnB,mBAGXK,EAHW,KAGHC,EAHG,OAIMN,mBAAS,IAJf,mBAIXO,EAJW,KAILC,EAJK,KAMlB,OACI,qBAAKC,MAAM,QAAX,SACI,sBAAKA,MAAM,UAAX,UACI,yCACA,uBACIF,KAAK,OACLG,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAOV,EAAUU,EAAEC,OAAOH,UAGxC,wCACA,uBACIH,KAAK,OACLG,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAASQ,EAAEC,OAAOH,UAGvC,yCACA,uBACIH,KAAK,OACLG,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAON,EAAUM,EAAEC,OAAOH,UAGxC,uCACA,uBACIH,KAAK,OACLG,MAAOH,EACPI,SAAU,SAACC,GAAD,OAAOJ,EAAQI,EAAEC,OAAOH,UAGtC,wBAAQI,QAAS,kBAAMf,EAAMgB,aACzB,cAACC,EAAD,CACIf,OAAQA,EACRE,MAAOA,EACPE,OAAQA,EACRE,KAAMA,MALd,4BAahB,SAASS,EAAOjB,GAAQ,IAAD,EACeC,mBAAS,IADxB,mBACZiB,EADY,KACDC,EADC,KA+BnB,OAJAC,qBAAU,WAvBND,EAAa,CACTE,OAAQ,CACJrB,EAAMI,MAAQ,EACdJ,EAAMI,MAAQ,EACdJ,EAAMI,MAAQ,EACdJ,EAAMI,MACNkB,SAAStB,EAAMI,OAAS,EACxBkB,SAAStB,EAAMI,OAAS,EACxBkB,SAAStB,EAAMI,OAAS,GAE5BmB,SAAU,CACR,CACEC,MAAM,GAAD,OAAKxB,EAAME,OAAX,YAAqBF,EAAMM,OAA3B,YAAqCN,EAAMQ,MAChDiB,KAAM,EAAE,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAC5BC,YAAa,0BACbC,MAAM,EACNC,gBAAiB,QACjBC,YAAa,SAWrB,qBAAKnB,MAAM,SAAX,SACI,qBAAKA,MAAM,UAAX,SACI,cAAC,OAAD,CAAMe,KAAMP,QAiBbY,MAXf,WAAuB,IAAD,EACU7B,mBAAS,IADnB,mBACX8B,EADW,KACHC,EADG,KAGlB,OACE,sBAAKC,UAAU,aAAf,UACI,cAAClC,EAAD,CAAOiB,aAAcgB,IACpBD,MCxFIG,MARf,WACE,OACE,qBAAKD,UAAU,MAAf,SACE,cAAC,EAAD,OCJNE,IAASC,OACP,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.46f64081.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"./Calculator.css\";\r\n\r\n\r\nfunction Input(props) {\r\n    const [ticker, setTicker] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [strike, setStrike] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n\r\n    return (\r\n        <div class=\"Input\">\r\n            <div class=\"wrapper\">\r\n                <p>Ticker: </p>\r\n                <input \r\n                    type=\"text\" \r\n                    value={ticker} \r\n                    onChange={(e) => setTicker(e.target.value)}\r\n                ></input>\r\n                \r\n                <p>Price: </p>\r\n                <input \r\n                    type=\"text\"\r\n                    value={price} \r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                ></input>\r\n                \r\n                <p>Strike: </p>\r\n                <input \r\n                    type=\"text\"\r\n                    value={strike} \r\n                    onChange={(e) => setStrike(e.target.value)}\r\n                ></input>\r\n            \r\n                <p>Type: </p>\r\n                <input \r\n                    type=\"text\"  \r\n                    value={type} \r\n                    onChange={(e) => setType(e.target.value)}\r\n                ></input>\r\n                \r\n                <button onClick={() => props.createOutput(\r\n                    <Output \r\n                        ticker={ticker} \r\n                        price={price}\r\n                        strike={strike}\r\n                        type={type}\r\n                    />)}\r\n                >Click me!</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Output(props) {\r\n    const [chartData, setChartData] = useState({});\r\n   \r\n    const chart = () => {\r\n        setChartData({\r\n            labels: [\r\n                props.price - 3, \r\n                props.price - 2,\r\n                props.price - 1,\r\n                props.price,\r\n                parseInt(props.price) + 1,\r\n                parseInt(props.price) + 2,\r\n                parseInt(props.price) + 3, \r\n            ],\r\n            datasets: [\r\n              {\r\n                label: `${props.ticker} ${props.strike} ${props.type}`,\r\n                data: [-3, -3, -3, 0, 3, 6, 9],\r\n                borderColor: 'rgba(255, 99, 132, 100)',\r\n                fill: false,\r\n                borderJoinStyle: 'miter',\r\n                lineTension: 0\r\n              }\r\n            ]\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        chart();\r\n    });\r\n\r\n    return (\r\n        <div class=\"Output\">\r\n            <div class=\"wrapper\">\r\n                <Line data={chartData} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Calculator() {\r\n    const [output, setOutput] = useState(\"\");\r\n   \r\n    return (\r\n      <div className=\"Calculator\">\r\n          <Input createOutput={setOutput} />\r\n          {output}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Calculator;","import React from \"react\";\nimport \"./App.css\"\nimport Calculator from \"./components/Calculator\";\n\n\nfunction App() {\n  return(\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);"],"sourceRoot":""}